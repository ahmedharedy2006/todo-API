// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using todo_API.Data;

#nullable disable

namespace todo_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("todo_API.Models.List", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a default list.",
                            Name = "Default List"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tasks related to work.",
                            Name = "Work Tasks"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Tasks related to personal life.",
                            Name = "Personal Tasks"
                        });
                });

            modelBuilder.Entity("todo_API.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a sample task.",
                            DueDate = new DateTime(2025, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = false,
                            ListId = 1,
                            Title = "Sample Task"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Complete the project report.",
                            DueDate = new DateTime(2025, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = false,
                            ListId = 2,
                            Title = "Work Task"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Buy groceries.",
                            DueDate = new DateTime(2025, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = false,
                            ListId = 3,
                            Title = "Personal Task"
                        });
                });

            modelBuilder.Entity("todo_API.Models.Task", b =>
                {
                    b.HasOne("todo_API.Models.List", "List")
                        .WithMany("Tasks")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");
                });

            modelBuilder.Entity("todo_API.Models.List", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
